name: PHP Bin build
on:
  push:
    branches:
      - "main"
  watch:
    type: [started]
  schedule:
    - cron: "0 0 * * 6"

jobs:
  Build:
    runs-on: "${{ matrix.os }}"
    name: "Building PHP Binary to ${{ matrix.os }}"
    env:
      VS_EDITION: Enterprise
      SOURCES_PATH: ${{ github.workspace }}\pocketmine-php-sdk
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@main
        with:
          submodules: true

      - name: Node Setup
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 16.x

      - name: Install node Dependecies
        run: npm install

      - name: Linux Depencies Install
        if: matrix.os == 'ubuntu-latest'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update
          sudo apt install -y build-essential make wget gzip bzip2 bison git cmake re2c autoconf automake pkg-config libtool* unzip zip

      - name: Windows Depencies Install
        if: matrix.os == 'windows-latest'
        run: choco install wget --no-progress

      - name: MacOS Depencies Install
        if: matrix.os == 'macos-latest'
        run: brew install libtool autoconf automake pkg-config bison re2c

      - name: Linux Install musl-cross-installer
        if: matrix.os == 'ubuntu-latest'
        run: node index.js --pre_install --target=android --arch=arm64

      - name: "Building PHP to ${{ matrix.os }}"
        continue-on-error: true
        run: node index.js

      - name: Build PHP to Android
        if: matrix.os == 'ubuntu-latest'
        run: node index.js --target=android --arch=arm64
      
      # Upload
      - uses: softprops/action-gh-release@v0.1.8
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: PHP Binary Release
          tag_name: php_bin_${{ github.run_id }}
          files: "*_bin.zip"
          body: "Build file from ${{ matrix.os }}"

  CleanReleases:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Remove old Releases
        uses: Sirherobrine23/delete-older-releases@master
        with:
          keep_latest: 2
          delete_tags: true
          pattern_regex: true
          delete_tag_pattern: php_bin_.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
