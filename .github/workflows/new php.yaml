on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 0 1 * *"
  watch:
    type: [started]


jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: "${{ matrix.os }}"
    name: "PHP to ${{ matrix.os }}"
    steps:
      - name: Clone Repository
        uses: actions/checkout@main
        with:
          submodules: true

      - name: Node Setup
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 16.x

      - name: Install node Dependecies
        run: npm install

      - name: Linux Depencies Install
        if: matrix.os == 'ubuntu-latest'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update
          sudo apt install -y build-essential make wget gzip bzip2 bison git cmake re2c autoconf automake pkg-config libtool* unzip zip

      - name: Windows Depencies Install
        if: matrix.os == 'windows-latest'
        run: choco install wget --no-progress

      - name: MacOS Depencies Install
        if: matrix.os == 'macos-latest'
        run: brew install libtool autoconf automake pkg-config bison re2c

      # Windows Build
      - name: Windows Build php
        if: matrix.os == 'windows-latest'
        env:
          VS_EDITION: Enterprise
          SOURCES_PATH: ${{ github.workspace }}\pocketmine-php-sdk
        run: npm run build

      # Linux/MacOS Build
      - name: Linux/MacOS Build php
        if: matrix.os != 'windows-latest'
        continue-on-error: true
        run: npm run build

      # Upload Artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: "php_build_on_${{ matrix.os }}"
          path: "*_php.zip"
          retention-days: 1


  Publish:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      # Setup Node
      - name: Setup Node JS
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 16.x

      # Download Files
      - name: Download Bins
        uses: actions/download-artifact@v2
        with:
          path: /tmp/TMPBins
      - run: |
          mkdir -p /tmp/Bins/
          mv -v /tmp/TMPBins/*/*.zip /tmp/Bins/

      # Prepare files
      - name: Publish PHP files bin
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "PHP Binary: ${{ github.run_id }}"
          tag_name: php_bin_${{ github.run_id }}
          files: |
            /tmp/Bins/*.zip
          body: |
            Windows users install the [Microsoft Visual C ++ 2017 Redistributable](https://aka.ms/vs/15/release/vc_redist.x64.exe)

      - uses: actions/checkout@main

      - name: Install node dependencies
        run: npm install

      - name: Create New JSON
        run: tag_name="php_bin_${{ github.run_id }}" node create_json.js

      - name: Publish php_bin.json
        run: |
          set -ex
          git config --global user.email 'github-actions@github.com'
          git config --global user.name 'github-actions[bot]'
          git config --global http.postBuffer 157286400 sslVerify=false
          git add ./binarys.json
          git commit -m "Publish PHP bins Json" -m "Run id: ${{ github.run_id }}"
          git push

      - name: Remove old Releases
        uses: Sirherobrine23/delete-older-releases@master
        with:
          keep_latest: 1
          delete_tags: true
          pattern_regex: true
          delete_tag_pattern: php_bin_.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
